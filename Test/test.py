# Создание пространства имен:
# При создании файла (например, myprog.py) в Python автоматически создается пространство имен с именем файла.
# Изначально пространство имен пустое, но при объявлении переменных (например, N = 100, WIDTH, HEIGHT = 1000, 500) они становятся глобальными в пределах модуля.
# Глобальные и локальные переменные:
# Все переменные в пространстве имен доступны в любом месте программы после их объявления.
# Локальные переменные создаются внутри функций и доступны только в пределах этой функции.
# Пример функции:
# python
#

def my_func(lst):
    for x in lst:
        n = x + 1
        print(n)

# В функции my_func создаются локальные переменные lst, x и n.
# Цикл for не создает своего локального пространства имен.
# Область видимости:
# Локальные переменные недоступны вне функции (например, print(x) вызовет ошибку).
# Внутри функции доступны глобальные переменные (например, print(N, WIDTH)).
# Переопределение глобальных переменных:
# Если в функции объявить локальную переменную с тем же именем, что и глобальная (например, N = 10), будет использоваться локальная переменная.
# Для изменения глобальной переменной внутри функции нужно использовать ключевое слово global:
# python
#

def my_func(lst):
    global N
    N = 10

# Работа с отсутствующими глобальными переменными:
# Если глобальная переменная закомментирована, она будет создана при использовании global в функции.
# Ключевое слово nonlocal:
# Используется для работы с переменными, объявленными в внешней функции:
# python
#

def outer():
    x = 1
    def inner():
        nonlocal x
        x = 2
        print("inner:", x)

# Изменение переменной x в inner повлияет на x в outer.
# Ошибки при использовании global и nonlocal:
# nonlocal не работает с глобальными переменными, для этого используется global.
# Если в функции уже существует локальная переменная с тем же именем, использование global приведет к ошибке.