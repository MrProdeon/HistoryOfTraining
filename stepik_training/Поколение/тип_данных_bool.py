# Тип данных boll

#Логический тип данных - тип данных, принимающий True or False
#a and b даёт True, если оба операнда True, и False, если хотя бы один из них False;
#a or b даёт False, если оба операнда False, и True, если хотя бы один из них True;
#not a даёт True, если a имеет значение False, и False, если a имеет значение True.



#Значению True соответствует число 1 , а false = 0

print(True == 1)
print(False == 0)

True
True


#Мы можем также применять арифметические операции к логическим значениям
print(True + True + True - False)
print(True + (False / True))

3
1.0


#Функция bool() используется для приведения типов данных к булевому значению


# Строки . Пустая строка - ложь. Непустая - истина
# ЧИСЛА. Нулевое число - Ложль, ненулевое(даже ниже нуля) - Истина
# СПИСКИ Пустой список - ложль, непустой - истина

#Если функцию bool() вызвать без аргументов, то она вернет значение False.


# Функции с возвратом булевого значения 

# Функция проверки аргумента на четность 

def is_even(num):
    return num % 2 == 0

# Вернет истину, если это так или ложь в обратном случае

# В программировании функция, которая возвращает значение True или False, называется предикатом.

#В языке Python имеется встроенная функция isinstance() для проверки соответствия типа объекта какому-либо типу данных.

print(isinstance(3, int))
print(isinstance(3.5, float))
print(isinstance('Beegeek', str))
print(isinstance([1, 2, 3], list))
print(isinstance(True, bool))

True
True
True
True
True

# Функция проверяет, действительно ли первый введенный аргумент соответствует второму аргументу по типу


# Функция type()
#В языке Python имеется встроенная функция type(), позволяющая получить тип указанного в качестве аргумента объекта.

print(type(3))
print(type(3.5))
print(type('Beegeek'))
print(type([1, 2, 3]))
print(type(True))

#<class 'int'>
#<class 'float'>
#<class 'str'>
#<class 'list'>
#<class 'bool'>
