# Встроенная функция map()
#
# Имеет сигнатуру map(func, iterables)
#
# В func передается функция, по которой будет происходить преобразование
# В iterables передаются объекты, которые будем преобразовывать
# Внутри функции func необходимо return новое значение
#
# Пример кода, который прибавляет к элементам списка 7
#
# def increase(num):
#     num+7
#
# numbers = [1, 2, 3, 4, 5]
#
# new_numbers = map(increase, numbers)
# print(new_numbers)
#
# Выведет <map object at 0x...> - это называется итератор
#
# Функция map возвращает объект, поддерживающий итерации, а не список
#
# Такой итератор можно пробежать циклом и  вывести его элементы
#
# for i in new_numbers:
#     print(i)
#
# Чтобы вывести сразу список необходимо использоваться фунцию list
# new_numbers = list(map(increase, numbers))
#
#
# В map() можно передать несколько последовательностей.
# В этом случае будут передаваться сразу несколько элементов, расположенных на одинаковых позициях
#
# Пример кода, сумирующего элементы
#
# def func(elem1, elem2, elem3):
#     return elem1 + elem2 + elem3
#
# numbers1 = [1, 2, 3, 4, 5]
# numbers2 = [10, 20, 30, 40, 50]
# numbers3 = [100, 200, 300, 400, 500]
#
# new_numbers1 = list(map(func, numbers1, numbers2, numbers3))
# print(new_numbers1)
#
# [111, 222, 333 ,444 ,555]
#
# Каждый элемент складывается поочередно с элементом следуюзего списка на такой же позиции
#
# Если В последовательности разное количество элементов, то ограничителем становится последовательность с наименьшим кол-вом элементов
#
#
# def func(elem1, elem2, elem3):
#     return elem1 + elem2 + elem3
#
#
# numbers1 = [1, 2, 3, 4]
# numbers2 = [10, 20]
# numbers3 = [100, 200, 300, 400, 500]
#
# new_numbers3 = list(map(func, numbers1, numbers2, numbers3))  #  преобразуем итератор в список
#
# print(new_numbers3)
#
# [111, 222]
#
# Фукнция реализована гибко, в качестве последовательностей можно использовать:
# списки, строки, кортежи, множества, словари
#
# Пример
#
# circle_areas = [3.56773, 5.57668, 4.31914, 6.20241, 91.01344, 32.01213]
# result1 = list(map(round, circle_areas, [1]*6)) # Преобразуем числа до 1 знака после запятой
# result2 = list(map(round, circle_areas, range(1,7))) # Преобразуем числа от 1 до 6 знаков после запятой последовательно
#
# print(result1) [3.5, 5.5, 4.3...........]
# print(result2) [3.5, 5.57, 4.319........]
#
# Встроенная функция round(x, n=0) принимает два аргумента
# х - округляем это числа
# n - до стольки знаков после точки
# По умолчанию n = 0
#
#




